basePath: /api
definitions:
  entities.CreateUserRequest:
    properties:
      email:
        example: petrov@mail.ru
        type: string
      full_name:
        example: Петров Петр Иванович
        type: string
      password:
        example: "12345678"
        type: string
    type: object
  entities.CreateUserResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJNYXBDbGFpbXMiOnsiRXhwaXJlc0F0IjoxNzM4MDE3MjA5LCJJc3N1ZWRBciI6MTczNDQxNzIwOX0sInVzZXJfaWQiOjF9.CX2eHEjXZa209vDdtdoz40JlbxuHukMjrc-hw2E_Jy0
        type: string
      id:
        example: 1
        type: integer
    type: object
  entities.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  entities.LoginUserRequest:
    properties:
      email:
        example: petrov@mail.ru
        type: string
      password:
        example: "12345678"
        type: string
    type: object
  entities.LoginUserResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJNYXBDbGFpbXMiOnsiRXhwaXJlc0F0IjoxNzM4MDE3MjA5LCJJc3N1ZWRBciI6MTczNDQxNzIwOX0sInVzZXJfaWQiOjF9.CX2eHEjXZa209vDdtdoz40JlbxuHukMjrc-hw2E_Jy0
        type: string
      id:
        example: 1
        type: integer
    type: object
  entities.UserData:
    properties:
      email:
        example: petrov@mail.ru
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Петр
        type: string
      surname:
        example: Петров
        type: string
      third_name:
        example: Петрович
        type: string
    type: object
info:
  contact: {}
  title: Kotiki API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Аутентификация пользователя с возвращением токена доступа
      parameters:
      - description: Данные пользоватея
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный вход
          schema:
            $ref: '#/definitions/entities.LoginUserResponse'
        "400":
          description: Неверный логин или пароль
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Вход пользователя
      tags:
      - user
  /signup:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя и выдает ему токен доступа
      parameters:
      - description: Данные для регистрации
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Регистрация успешна
          schema:
            $ref: '#/definitions/entities.CreateUserResponse'
        "400":
          description: Пользователь уже существует или данные неверны
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Регистрация пользователя
      tags:
      - user
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Извлекает пользовательские данные из БД по ID пользователя
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Пользовательские данные получены
          schema:
            $ref: '#/definitions/entities.UserData'
        "400":
          description: Неверный формат ID
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Получение данных пользователя по его ID
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
