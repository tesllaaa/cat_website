// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/favorites": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получение списка кошек, которые являются любимыми у пользователя по его идентификатору с логированием ошибок",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cat"
                ],
                "summary": "Получение списка любимых кошек пользователя",
                "responses": {
                    "200": {
                        "description": "Успешное получение списка любимых кошек",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Cat"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный идентификатор пользователя",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавление кошки в список любимых пользователя по его идентификатору и идентификатору кошки с логированием ошибок",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cat"
                ],
                "summary": "Добавление кошки в список любимых",
                "parameters": [
                    {
                        "description": "Информация о кошке и пользователе",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.UpdateFavoriteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное добавление кошки в список любимых",
                        "schema": {
                            "$ref": "#/definitions/entities.Favorite"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаление кошки из списка любимых пользователя по его идентификатору и идентификатору кошки с логированием ошибок",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cat"
                ],
                "summary": "Удаление кошки из списка любимых",
                "parameters": [
                    {
                        "description": "Информация о кошке и пользователе",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.UpdateFavoriteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное удаление кошки из списка любимых",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cat": {
            "get": {
                "description": "Получение всех записей о кошках из базы данных с логированием ошибок",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cat"
                ],
                "summary": "Получение списка всех кошек",
                "responses": {
                    "200": {
                        "description": "Успешное получение списка кошек",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Cat"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновление существующей записи о кошке в базе данных с логированием ошибок",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cat"
                ],
                "summary": "Обновление записи о кошке",
                "parameters": [
                    {
                        "description": "Данные для обновления кошки",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.UpdateCatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление записи",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Добавление новой записи о кошке в базу данных с логированием ошибок",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cat"
                ],
                "summary": "Создание записи о кошке",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Шерсть кошки",
                        "name": "fur",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Порода кошки",
                        "name": "breed",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Сложность ухода за кошкой",
                        "name": "care_complexity",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Темперамент кошки",
                        "name": "temper",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Изображение кошки",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное создание записи",
                        "schema": {
                            "$ref": "#/definitions/entities.Cat"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cat/id/{id}": {
            "get": {
                "description": "Получение данных о конкретной кошке из базы данных по её идентификатору с логированием ошибок",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cat"
                ],
                "summary": "Получение информации о кошке по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID кошки для поиска",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное получение данных о кошке",
                        "schema": {
                            "$ref": "#/definitions/entities.Cat"
                        }
                    },
                    "400": {
                        "description": "Некорректный идентификатор",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаление записи о кошке из базы данных по её идентификатору с логированием ошибок",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cat"
                ],
                "summary": "Удаление записи о кошке",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID кошки для удаления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное удаление записи",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный идентификатор",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Аутентификация пользователя с возвращением токена доступа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Вход пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный вход",
                        "schema": {
                            "$ref": "#/definitions/entities.LoginUserResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный логин или пароль",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Создает нового пользователя и выдает ему токен доступа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Регистрация успешна",
                        "schema": {
                            "$ref": "#/definitions/entities.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Пользователь уже существует или данные неверны",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Извлекает пользовательские данные из БД по ID пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Получение данных пользователя по его ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользовательские данные получены",
                        "schema": {
                            "$ref": "#/definitions/entities.UserData"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.Cat": {
            "type": "object",
            "properties": {
                "breed": {
                    "type": "string",
                    "example": "Мейн-кун"
                },
                "care_complexity": {
                    "type": "integer",
                    "example": 4
                },
                "fur": {
                    "type": "string",
                    "example": "Длинношерстная"
                },
                "id": {
                    "type": "integer",
                    "example": 7
                },
                "image_path": {
                    "type": "string",
                    "example": "/images/cat.png"
                },
                "temper": {
                    "type": "string",
                    "example": "Спокойный"
                }
            }
        },
        "entities.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "petrov@mail.ru"
                },
                "name": {
                    "type": "string",
                    "example": "Петр"
                },
                "password": {
                    "type": "string",
                    "example": "12345678"
                },
                "surname": {
                    "type": "string",
                    "example": "Петров"
                }
            }
        },
        "entities.CreateUserResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJNYXBDbGFpbXMiOnsiRXhwaXJlc0F0IjoxNzM4MDE3MjA5LCJJc3N1ZWRBciI6MTczNDQxNzIwOX0sInVzZXJfaWQiOjF9.CX2eHEjXZa209vDdtdoz40JlbxuHukMjrc-hw2E_Jy0"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "entities.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "entities.Favorite": {
            "type": "object",
            "properties": {
                "cat_id": {
                    "type": "integer",
                    "example": 3
                },
                "id": {
                    "type": "integer",
                    "example": 5
                },
                "user_id": {
                    "type": "integer",
                    "example": 44
                }
            }
        },
        "entities.LoginUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "petrov@mail.ru"
                },
                "password": {
                    "type": "string",
                    "example": "12345678"
                }
            }
        },
        "entities.LoginUserResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJNYXBDbGFpbXMiOnsiRXhwaXJlc0F0IjoxNzM4MDE3MjA5LCJJc3N1ZWRBciI6MTczNDQxNzIwOX0sInVzZXJfaWQiOjF9.CX2eHEjXZa209vDdtdoz40JlbxuHukMjrc-hw2E_Jy0"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "entities.UpdateCatRequest": {
            "type": "object",
            "properties": {
                "breed": {
                    "type": "string",
                    "example": "Мейн-кун"
                },
                "care_complexity": {
                    "type": "integer",
                    "example": 4
                },
                "fur": {
                    "type": "string",
                    "example": "Длинношерстная"
                },
                "id": {
                    "type": "integer",
                    "example": 7
                },
                "temper": {
                    "type": "string",
                    "example": "Спокойный"
                }
            }
        },
        "entities.UpdateFavoriteRequest": {
            "type": "object",
            "properties": {
                "cat_id": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "entities.UserData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "petrov@mail.ru"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Петр"
                },
                "surname": {
                    "type": "string",
                    "example": "Петров"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Kotiki API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
